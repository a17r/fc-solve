--- Pressing ---

--- Non-pressing ---

* Experiment with converting the many max_num_* / num_* pairs to num_*
only (with ((num & 0x10) == 0) as a resize check.) 

* Experiment with using a union in the soft_thread to unify common elements
that are used only by one of the scans.

* Move the trunk, branches, tags, etc. to under /fc-solve. (?)

* Default on building from the .tar.bz2 and distribute them instead of
the .tar.gz's (less space).

* Re-organize the source code to be more sensibly organized.

* Experiment with using bit members for cards:
    - http://en.wikipedia.org/wiki/Bit_field

* Abstract away the move of a single card from one column to another
in freecell.c.

* Try to convert the macro-mania in tests.h (sfs_check_state_begin() / 
sfs_check_state_end() ) to functions, and see if it actually makes it faster.

* Interactive mode? Continue a scan that reached its limit.

* Convert some of the documentation to Perl-POD or DocBook.

* Find a way to update the ChangeLog from the svn.

* Put the rest of the news (from http://fc-solve.berlios.de/ ) inside the
NEWS file.

* Investigate ways to perform more pointer arithematics and 
(ptr < end_ptr) ; ptr++ . A lot of code is under-optimized this way.

* In the states handling, there's still some room for pointer arithmetics.

--- Long-term ---

* Code a generic tests grouping.

* Integrate the patsolve's prioritization and mixed BFS/DFS scan.

* Update the architecture document.

* Make a super-strict parsable-output without all the quirks of
-p -t (see Games-Solitaire-Verify for why).

* Write a multi-threaded version.

* Port to Java (?)

* Add a switch to ask the user if he wants to continue and enter a bigger 
iterations limit.

* Check for unmalloced data and if so gracefully exit.

* Experiment with a delta-based state storage.

* Add a way to build the various libavl2 trees to be used as 
positions/columns collections.

--- To be considered ---

* Make the code splint-clean. ( https://sourceforge.net/projects/splint/ )

* Write a multi-process client/server program.

* Add a limit to stacks number (in the case of Indirect Stack States),
number of states that are stored anywhere, etc.

